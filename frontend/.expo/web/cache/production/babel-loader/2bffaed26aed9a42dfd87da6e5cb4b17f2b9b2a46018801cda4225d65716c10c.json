{"ast":null,"code":"import _createClass from\"@babel/runtime/helpers/createClass\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _wrapNativeSuper from\"@babel/runtime/helpers/wrapNativeSuper\";function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}export var CodedError=function(_Error){function CodedError(code,message){var _this;_classCallCheck(this,CodedError);_this=_callSuper(this,CodedError,[message]);_this.code=code;return _this;}_inherits(CodedError,_Error);return _createClass(CodedError);}(_wrapNativeSuper(Error));","map":{"version":3,"names":["CodedError","_Error","code","message","_this","_classCallCheck","_callSuper","_inherits","_createClass","_wrapNativeSuper","Error"],"sources":["D:\\pool-hall-waitlist\\frontend\\node_modules\\expo-modules-core\\src\\errors\\CodedError.ts"],"sourcesContent":["/**\n * A general error class that should be used for all errors in Expo modules.\n * Guarantees a `code` field that can be used to differentiate between different\n * types of errors without further subclassing Error.\n */\nexport class CodedError extends Error {\n  code: string;\n  info?: any;\n\n  constructor(code: string, message: string) {\n    super(message);\n    this.code = code;\n  }\n}\n"],"mappings":"6yBAKA,UAAa,CAAAA,UAAW,UAAAC,MAAA,EAItB,SAAAD,WAAYE,IAAY,CAAEC,OAAe,MAAAC,KAAA,CAAAC,eAAA,MAAAL,UAAA,EACvCI,KAAA,CAAAE,UAAA,MAAAN,UAAA,EAAMG,OAAO,GACbC,KAAA,CAAKF,IAAI,CAAGA,IAAI,CAAC,OAAAE,KAAA,CACnB,CAACG,SAAA,CAAAP,UAAA,CAAAC,MAAA,SAAAO,YAAA,CAAAR,UAAA,IAAAS,gBAAA,CAP6BC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}