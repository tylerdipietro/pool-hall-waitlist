{"ast":null,"code":"'use strict';import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import Platform from'../../../exports/Platform';import RCTDeviceEventEmitter from'./RCTDeviceEventEmitter';import invariant from'fbjs/lib/invariant';var NativeEventEmitter=function(){function NativeEventEmitter(nativeModule){_classCallCheck(this,NativeEventEmitter);if(\"web\"==='ios'){invariant(nativeModule!=null,'`new NativeEventEmitter()` requires a non-null argument.');this._nativeModule=nativeModule;}}return _createClass(NativeEventEmitter,[{key:\"addListener\",value:function addListener(eventType,listener,context){var _this=this;var _this$_nativeModule;(_this$_nativeModule=this._nativeModule)==null?void 0:_this$_nativeModule.addListener(eventType);var subscription=RCTDeviceEventEmitter.addListener(eventType,listener,context);return{remove:function remove(){if(subscription!=null){var _this$_nativeModule2;(_this$_nativeModule2=_this._nativeModule)==null?void 0:_this$_nativeModule2.removeListeners(1);subscription.remove();subscription=null;}}};}},{key:\"removeListener\",value:function removeListener(eventType,listener){var _this$_nativeModule3;(_this$_nativeModule3=this._nativeModule)==null?void 0:_this$_nativeModule3.removeListeners(1);RCTDeviceEventEmitter.removeListener(eventType,listener);}},{key:\"emit\",value:function emit(eventType){for(var _len=arguments.length,args=new Array(_len>1?_len-1:0),_key=1;_key<_len;_key++){args[_key-1]=arguments[_key];}RCTDeviceEventEmitter.emit.apply(RCTDeviceEventEmitter,[eventType].concat(args));}},{key:\"removeAllListeners\",value:function removeAllListeners(eventType){var _this$_nativeModule4;invariant(eventType!=null,'`NativeEventEmitter.removeAllListener()` requires a non-null argument.');(_this$_nativeModule4=this._nativeModule)==null?void 0:_this$_nativeModule4.removeListeners(this.listenerCount(eventType));RCTDeviceEventEmitter.removeAllListeners(eventType);}},{key:\"listenerCount\",value:function listenerCount(eventType){return RCTDeviceEventEmitter.listenerCount(eventType);}}]);}();export{NativeEventEmitter as default};","map":{"version":3,"names":["_classCallCheck","_createClass","Platform","RCTDeviceEventEmitter","invariant","NativeEventEmitter","nativeModule","_nativeModule","key","value","addListener","eventType","listener","context","_this","_this$_nativeModule","subscription","remove","_this$_nativeModule2","removeListeners","removeListener","_this$_nativeModule3","emit","_len","arguments","length","args","Array","_key","apply","concat","removeAllListeners","_this$_nativeModule4","listenerCount","default"],"sources":["D:/pool-hall-waitlist/frontend/node_modules/react-native-web/dist/vendor/react-native/NativeEventEmitter/index.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nimport Platform from '../../../exports/Platform';\nimport RCTDeviceEventEmitter from './RCTDeviceEventEmitter';\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * `NativeEventEmitter` is intended for use by Native Modules to emit events to\n * JavaScript listeners. If a `NativeModule` is supplied to the constructor, it\n * will be notified (via `addListener` and `removeListeners`) when the listener\n * count changes to manage \"native memory\".\n *\n * Currently, all native events are fired via a global `RCTDeviceEventEmitter`.\n * This means event names must be globally unique, and it means that call sites\n * can theoretically listen to `RCTDeviceEventEmitter` (although discouraged).\n */\nexport default class NativeEventEmitter {\n  constructor(nativeModule) {\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule != null, '`new NativeEventEmitter()` requires a non-null argument.');\n      this._nativeModule = nativeModule;\n    }\n  }\n\n  addListener(eventType, listener, context) {\n    var _this$_nativeModule;\n\n    (_this$_nativeModule = this._nativeModule) == null ? void 0 : _this$_nativeModule.addListener(eventType);\n    var subscription = RCTDeviceEventEmitter.addListener(eventType, listener, context);\n    return {\n      remove: () => {\n        if (subscription != null) {\n          var _this$_nativeModule2;\n\n          (_this$_nativeModule2 = this._nativeModule) == null ? void 0 : _this$_nativeModule2.removeListeners(1); // $FlowFixMe[incompatible-use]\n\n          subscription.remove();\n          subscription = null;\n        }\n      }\n    };\n  }\n  /**\n   * @deprecated Use `remove` on the EventSubscription from `addListener`.\n   */\n\n\n  removeListener(eventType, listener) {\n    var _this$_nativeModule3;\n\n    (_this$_nativeModule3 = this._nativeModule) == null ? void 0 : _this$_nativeModule3.removeListeners(1); // NOTE: This will report a deprecation notice via `console.error`.\n    // $FlowFixMe[prop-missing] - `removeListener` exists but is deprecated.\n\n    RCTDeviceEventEmitter.removeListener(eventType, listener);\n  }\n\n  emit(eventType) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    // Generally, `RCTDeviceEventEmitter` is directly invoked. But this is\n    // included for completeness.\n    RCTDeviceEventEmitter.emit(eventType, ...args);\n  }\n\n  removeAllListeners(eventType) {\n    var _this$_nativeModule4;\n\n    invariant(eventType != null, '`NativeEventEmitter.removeAllListener()` requires a non-null argument.');\n    (_this$_nativeModule4 = this._nativeModule) == null ? void 0 : _this$_nativeModule4.removeListeners(this.listenerCount(eventType));\n    RCTDeviceEventEmitter.removeAllListeners(eventType);\n  }\n\n  listenerCount(eventType) {\n    return RCTDeviceEventEmitter.listenerCount(eventType);\n  }\n\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}