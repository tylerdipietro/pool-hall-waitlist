{"ast":null,"code":"import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{Platform}from'expo-modules-core';import{v4 as uuidv4}from'uuid';import{ExecutionEnvironment}from'./Constants.types';var ID_KEY='EXPO_CONSTANTS_INSTALLATION_ID';var _sessionId=uuidv4();function getBrowserName(){if(Platform.isDOMAvailable){var agent=navigator.userAgent.toLowerCase();if(agent.includes('edge')){return'Edge';}else if(agent.includes('edg')){return'Chromium Edge';}else if(agent.includes('opr')&&!!window['opr']){return'Opera';}else if(agent.includes('chrome')&&!!window['chrome']){return'Chrome';}else if(agent.includes('trident')){return'IE';}else if(agent.includes('firefox')){return'Firefox';}else if(agent.includes('safari')){return'Safari';}}return undefined;}export default{get name(){return'ExponentConstants';},get appOwnership(){return null;},get executionEnvironment(){return ExecutionEnvironment.Bare;},get installationId(){var installationId;try{installationId=localStorage.getItem(ID_KEY);if(installationId==null||typeof installationId!=='string'){installationId=uuidv4();localStorage.setItem(ID_KEY,installationId);}}catch(_unused){installationId=_sessionId;}finally{return installationId;}},get sessionId(){return _sessionId;},get platform(){return{web:Platform.isDOMAvailable?{ua:navigator.userAgent}:undefined};},get isHeadless(){if(!Platform.isDOMAvailable)return true;return /\\bHeadlessChrome\\//.test(navigator.userAgent);},get isDevice(){return true;},get expoVersion(){return this.manifest.sdkVersion||null;},get linkingUri(){if(Platform.isDOMAvailable){return location.origin;}else{return'';}},get expoRuntimeVersion(){return this.expoVersion;},get deviceName(){return getBrowserName();},get nativeAppVersion(){return null;},get nativeBuildVersion(){return null;},get systemFonts(){return[];},get statusBarHeight(){return 0;},get deviceYearClass(){return null;},get manifest(){return process.env.APP_MANIFEST||{};},get manifest2(){return null;},get experienceUrl(){if(Platform.isDOMAvailable){return location.origin;}else{return'';}},get debugMode(){return false;},getWebViewUserAgentAsync:function(){var _getWebViewUserAgentAsync=_asyncToGenerator(function*(){if(Platform.isDOMAvailable){return navigator.userAgent;}else{return null;}});function getWebViewUserAgentAsync(){return _getWebViewUserAgentAsync.apply(this,arguments);}return getWebViewUserAgentAsync;}()};","map":{"version":3,"names":["Platform","v4","uuidv4","ExecutionEnvironment","ID_KEY","_sessionId","getBrowserName","isDOMAvailable","agent","navigator","userAgent","toLowerCase","includes","window","undefined","name","appOwnership","executionEnvironment","Bare","installationId","localStorage","getItem","setItem","_unused","sessionId","platform","web","ua","isHeadless","test","isDevice","expoVersion","manifest","sdkVersion","linkingUri","location","origin","expoRuntimeVersion","deviceName","nativeAppVersion","nativeBuildVersion","systemFonts","statusBarHeight","deviceYearClass","process","env","APP_MANIFEST","manifest2","experienceUrl","debugMode","getWebViewUserAgentAsync","_getWebViewUserAgentAsync","_asyncToGenerator","apply","arguments"],"sources":["D:\\pool-hall-waitlist\\frontend\\node_modules\\expo-constants\\src\\ExponentConstants.web.ts"],"sourcesContent":["import { Platform } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport {\n  ExecutionEnvironment,\n  NativeConstants,\n  PlatformManifest,\n  WebManifest,\n} from './Constants.types';\n\nconst ID_KEY = 'EXPO_CONSTANTS_INSTALLATION_ID';\n\ndeclare let __DEV__: boolean;\ndeclare let process: { env: any };\ndeclare let navigator: Navigator;\ndeclare let location: Location;\ndeclare let localStorage: Storage;\n\nconst _sessionId = uuidv4();\n\nfunction getBrowserName(): string | undefined {\n  if (Platform.isDOMAvailable) {\n    const agent = navigator.userAgent.toLowerCase();\n    if (agent.includes('edge')) {\n      return 'Edge';\n    } else if (agent.includes('edg')) {\n      return 'Chromium Edge';\n    } else if (agent.includes('opr') && !!window['opr']) {\n      return 'Opera';\n    } else if (agent.includes('chrome') && !!window['chrome']) {\n      return 'Chrome';\n    } else if (agent.includes('trident')) {\n      return 'IE';\n    } else if (agent.includes('firefox')) {\n      return 'Firefox';\n    } else if (agent.includes('safari')) {\n      return 'Safari';\n    }\n  }\n\n  return undefined;\n}\n\nexport default {\n  get name(): string {\n    return 'ExponentConstants';\n  },\n  get appOwnership() {\n    return null;\n  },\n  get executionEnvironment() {\n    return ExecutionEnvironment.Bare;\n  },\n  get installationId(): string {\n    let installationId;\n    try {\n      installationId = localStorage.getItem(ID_KEY);\n      if (installationId == null || typeof installationId !== 'string') {\n        installationId = uuidv4();\n        localStorage.setItem(ID_KEY, installationId as string);\n      }\n    } catch {\n      installationId = _sessionId;\n    } finally {\n      return installationId;\n    }\n  },\n  get sessionId(): string {\n    return _sessionId;\n  },\n  get platform(): PlatformManifest {\n    return { web: Platform.isDOMAvailable ? { ua: navigator.userAgent } : undefined };\n  },\n  get isHeadless(): boolean {\n    if (!Platform.isDOMAvailable) return true;\n\n    return /\\bHeadlessChrome\\//.test(navigator.userAgent);\n  },\n  get isDevice(): true {\n    // TODO: Bacon: Possibly want to add information regarding simulators\n    return true;\n  },\n  get expoVersion(): string | null {\n    return this.manifest!.sdkVersion || null;\n  },\n  get linkingUri(): string {\n    if (Platform.isDOMAvailable) {\n      // On native this is `exp://`\n      // On web we should use the protocol and hostname (location.origin)\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get expoRuntimeVersion(): string | null {\n    return this.expoVersion;\n  },\n  get deviceName(): string | undefined {\n    return getBrowserName();\n  },\n  get nativeAppVersion(): null {\n    return null;\n  },\n  get nativeBuildVersion(): null {\n    return null;\n  },\n  get systemFonts(): string[] {\n    // TODO: Bacon: Maybe possible.\n    return [];\n  },\n  get statusBarHeight(): number {\n    return 0;\n  },\n  get deviceYearClass(): number | null {\n    // TODO: Bacon: The android version isn't very accurate either, maybe we could try and guess this value.\n    return null;\n  },\n  get manifest(): WebManifest {\n    // This is defined by @expo/webpack-config.\n    // If your site is bundled with a different config then you may not have access to the app.json automatically.\n    return process.env.APP_MANIFEST || {};\n  },\n  get manifest2(): null {\n    return null;\n  },\n  get experienceUrl(): string {\n    if (Platform.isDOMAvailable) {\n      return location.origin;\n    } else {\n      return '';\n    }\n  },\n  get debugMode(): boolean {\n    return __DEV__;\n  },\n  async getWebViewUserAgentAsync(): Promise<string | null> {\n    if (Platform.isDOMAvailable) {\n      return navigator.userAgent;\n    } else {\n      return null;\n    }\n  },\n} as NativeConstants;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}