{"ast":null,"code":"import { io } from 'socket.io-client';\nvar API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\nvar socket;\nexport function initSocket() {\n  if (!socket) {\n    socket = io(API_BASE_URL, {\n      autoConnect: true\n    });\n  }\n  return socket;\n}\nfunction emit(event, payload) {\n  if (!socket) initSocket();\n  socket.emit(event, payload);\n}\nexport function joinQueue(userId) {\n  console.log('joinQueue called with userId:', userId);\n  emit('join_queue', userId);\n}\nexport function joinTable(tableId, userId) {\n  emit('join_table', {\n    tableId: tableId,\n    userId: userId\n  });\n}\nexport function claimWin(tableId, winnerId) {\n  console.log('[claimWin] Emitting claim_win', {\n    tableId: tableId,\n    winnerId: winnerId\n  });\n  emit('claim_win', {\n    tableId: tableId,\n    winnerId: winnerId\n  });\n}\nexport var confirmWin = function confirmWin(tableId, winnerId, loserId, confirmed, cb) {\n  socket.emit('confirm_win', {\n    tableId: tableId,\n    winnerId: winnerId,\n    loserId: loserId,\n    confirmed: confirmed\n  }, cb);\n};\nexport function clearQueue() {\n  emit('admin:clear_queue');\n}\nexport function clearTables() {\n  emit('admin:clear_tables');\n}\nexport function removePlayer(tableId, userId) {\n  emit('admin:remove_player', {\n    tableId: tableId,\n    userId: userId\n  });\n}\nexport default initSocket();","map":{"version":3,"names":["io","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","socket","initSocket","autoConnect","emit","event","payload","joinQueue","userId","console","log","joinTable","tableId","claimWin","winnerId","confirmWin","loserId","confirmed","cb","clearQueue","clearTables","removePlayer"],"sources":["D:/pool-hall-waitlist/frontend/utils/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000';\r\n\r\nlet socket;\r\n\r\nexport function initSocket() {\r\n  if (!socket) {\r\n    socket = io(API_BASE_URL, {\r\n      autoConnect: true,\r\n      // Optional: transports: ['websocket']\r\n    });\r\n  }\r\n  return socket;\r\n}\r\n\r\nfunction emit(event, payload) {\r\n  if (!socket) initSocket();\r\n  socket.emit(event, payload);\r\n}\r\n\r\n// Client joins the matchmaking queue\r\nexport function joinQueue(userId) {\r\n  console.log('joinQueue called with userId:', userId);\r\n  emit('join_queue', userId);\r\n}\r\n\r\n// Client joins a specific table\r\nexport function joinTable(tableId, userId) {\r\n  emit('join_table', { tableId, userId });\r\n}\r\n\r\n// Player claims a win (sends winnerId to server)\r\nexport function claimWin(tableId, winnerId) {\r\n  console.log('[claimWin] Emitting claim_win', { tableId, winnerId });\r\n  emit('claim_win', { tableId, winnerId });\r\n}\r\n\r\nexport const confirmWin = (tableId, winnerId, loserId, confirmed, cb) => {\r\n  socket.emit('confirm_win', { tableId, winnerId, loserId, confirmed }, cb);\r\n};\r\n\r\n\r\n\r\n// Admin clears the queue\r\nexport function clearQueue() {\r\n  emit('admin:clear_queue');\r\n}\r\n\r\n// Admin clears all tables\r\nexport function clearTables() {\r\n  emit('admin:clear_tables');\r\n}\r\n\r\n// Admin forcibly removes a player from a table\r\nexport function removePlayer(tableId, userId) {\r\n  emit('admin:remove_player', { tableId, userId });\r\n}\r\n\r\n// Export socket instance as default for use in components\r\nexport default initSocket();\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AAErC,IAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,IAAI,uBAAuB;AAElF,IAAIC,MAAM;AAEV,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3B,IAAI,CAACD,MAAM,EAAE;IACXA,MAAM,GAAGL,EAAE,CAACC,YAAY,EAAE;MACxBM,WAAW,EAAE;IAEf,CAAC,CAAC;EACJ;EACA,OAAOF,MAAM;AACf;AAEA,SAASG,IAAIA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC5B,IAAI,CAACL,MAAM,EAAEC,UAAU,CAAC,CAAC;EACzBD,MAAM,CAACG,IAAI,CAACC,KAAK,EAAEC,OAAO,CAAC;AAC7B;AAGA,OAAO,SAASC,SAASA,CAACC,MAAM,EAAE;EAChCC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,MAAM,CAAC;EACpDJ,IAAI,CAAC,YAAY,EAAEI,MAAM,CAAC;AAC5B;AAGA,OAAO,SAASG,SAASA,CAACC,OAAO,EAAEJ,MAAM,EAAE;EACzCJ,IAAI,CAAC,YAAY,EAAE;IAAEQ,OAAO,EAAPA,OAAO;IAAEJ,MAAM,EAANA;EAAO,CAAC,CAAC;AACzC;AAGA,OAAO,SAASK,QAAQA,CAACD,OAAO,EAAEE,QAAQ,EAAE;EAC1CL,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE;IAAEE,OAAO,EAAPA,OAAO;IAAEE,QAAQ,EAARA;EAAS,CAAC,CAAC;EACnEV,IAAI,CAAC,WAAW,EAAE;IAAEQ,OAAO,EAAPA,OAAO;IAAEE,QAAQ,EAARA;EAAS,CAAC,CAAC;AAC1C;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIH,OAAO,EAAEE,QAAQ,EAAEE,OAAO,EAAEC,SAAS,EAAEC,EAAE,EAAK;EACvEjB,MAAM,CAACG,IAAI,CAAC,aAAa,EAAE;IAAEQ,OAAO,EAAPA,OAAO;IAAEE,QAAQ,EAARA,QAAQ;IAAEE,OAAO,EAAPA,OAAO;IAAEC,SAAS,EAATA;EAAU,CAAC,EAAEC,EAAE,CAAC;AAC3E,CAAC;AAKD,OAAO,SAASC,UAAUA,CAAA,EAAG;EAC3Bf,IAAI,CAAC,mBAAmB,CAAC;AAC3B;AAGA,OAAO,SAASgB,WAAWA,CAAA,EAAG;EAC5BhB,IAAI,CAAC,oBAAoB,CAAC;AAC5B;AAGA,OAAO,SAASiB,YAAYA,CAACT,OAAO,EAAEJ,MAAM,EAAE;EAC5CJ,IAAI,CAAC,qBAAqB,EAAE;IAAEQ,OAAO,EAAPA,OAAO;IAAEJ,MAAM,EAANA;EAAO,CAAC,CAAC;AAClD;AAGA,eAAeN,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}